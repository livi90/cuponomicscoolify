#!/usr/bin/env node

/**
 * Script de prueba espec√≠fico para verificar la b√∫squeda de tiendas
 * Uso: node scripts/test-store-search.js
 */

const BASE_URL = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000'

async function testStoreSearch() {
  console.log('üè™ Probando b√∫squeda de tiendas...\n')
  
  const testCases = [
    {
      name: 'B√∫squeda general de tiendas',
      url: `${BASE_URL}/buscar-ofertas?search=amazon`,
      expected: 'deber√≠a mostrar tiendas que contengan "amazon"'
    },
    {
      name: 'B√∫squeda de tienda espec√≠fica',
      url: `${BASE_URL}/buscar-ofertas?store=test-store-id`,
      expected: 'deber√≠a mostrar cupones de la tienda espec√≠fica'
    },
    {
      name: 'B√∫squeda por categor√≠a',
      url: `${BASE_URL}/buscar-ofertas?category=tecnologia`,
      expected: 'deber√≠a mostrar cupones de tiendas en categor√≠a tecnolog√≠a'
    },
    {
      name: 'B√∫squeda de productos outlet',
      url: `${BASE_URL}/buscar-ofertas?search=zapatos`,
      expected: 'deber√≠a mostrar productos outlet que contengan "zapatos"'
    },
    {
      name: 'B√∫squeda mixta',
      url: `${BASE_URL}/buscar-ofertas?search=oferta`,
      expected: 'deber√≠a mostrar tiendas, cupones y productos outlet con "oferta"'
    }
  ]

  for (const testCase of testCases) {
    try {
      console.log(`üß™ ${testCase.name}...`)
      const response = await fetch(testCase.url)
      
      if (response.ok) {
        const html = await response.text()
        
        // Verificar que la p√°gina carga correctamente
        if (html.includes('error') || html.includes('Error')) {
          console.log(`‚ùå ${testCase.name}: La p√°gina contiene errores`)
        } else if (html.includes('Cuponomics') || html.includes('cuponomics')) {
          console.log(`‚úÖ ${testCase.name}: P√°gina carga correctamente`)
          
          // Verificar elementos espec√≠ficos seg√∫n el tipo de b√∫squeda
          if (testCase.name.includes('tiendas') && html.includes('Tiendas encontradas')) {
            console.log(`   ‚úÖ Contiene secci√≥n de tiendas encontradas`)
          }
          
          if (testCase.name.includes('productos outlet') && html.includes('Productos de Outlet encontrados')) {
            console.log(`   ‚úÖ Contiene secci√≥n de productos outlet`)
          }
          
          if (testCase.name.includes('mixta')) {
            if (html.includes('Tiendas encontradas') || html.includes('Productos de Outlet encontrados')) {
              console.log(`   ‚úÖ Contiene resultados mixtos`)
            }
          }
          
        } else {
          console.log(`‚ö†Ô∏è ${testCase.name}: P√°gina carga pero contenido inesperado`)
        }
        
      } else {
        console.log(`‚ùå ${testCase.name}: Error HTTP ${response.status}`)
      }
      
    } catch (error) {
      console.log(`‚ùå ${testCase.name}: Error de conexi√≥n - ${error.message}`)
    }
    
    console.log('')
  }

  // Probar sugerencias de b√∫squeda
  console.log('üß™ Probando sugerencias de b√∫squeda...')
  try {
    // Simular una b√∫squeda en el frontend
    const searchResponse = await fetch(`${BASE_URL}/buscar-ofertas?search=test`)
    if (searchResponse.ok) {
      const searchHtml = await searchResponse.text()
      
      // Verificar que el formulario de b√∫squeda est√° presente
      if (searchHtml.includes('placeholder="Buscar tiendas, productos outlet, cupones, categor√≠as..."')) {
        console.log('‚úÖ Formulario de b√∫squeda con placeholder correcto')
      } else {
        console.log('‚ö†Ô∏è Formulario de b√∫squeda no encontrado o placeholder incorrecto')
      }
      
      // Verificar que hay elementos de b√∫squeda
      if (searchHtml.includes('search') && searchHtml.includes('input')) {
        console.log('‚úÖ Elementos de b√∫squeda presentes')
      } else {
        console.log('‚ö†Ô∏è Elementos de b√∫squeda no encontrados')
      }
      
    } else {
      console.log('‚ùå Error al cargar p√°gina de b√∫squeda')
    }
  } catch (error) {
    console.log('‚ùå Error al probar sugerencias:', error.message)
  }

  console.log('')
  console.log('üéâ Pruebas de b√∫squeda de tiendas completadas!')
}

// Ejecutar las pruebas
testStoreSearch() 